name: Publish BLSE and Launcher Extension

on:
  push:
    tags:
    - '*'

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  changelog:
    name: Get Changelog
    runs-on: ubuntu-latest
    outputs:
      mod_version: ${{ steps.changelog.outputs.mod_version.test }}
      mod_description: ${{ steps.changelog.outputs.mod_description.test }}
    steps:
      - uses: actions/checkout@v3

      - name: Install and Run ChangelogParser
        id: changelog
        run: |
          dotnet tool install -g Bannerlord.ChangelogParser
          vers="$(bannerlord_changelog_parser latestversion -f "$PWD/changelog.txt")"
          echo "::set-output name=mod_version::$vers"
          desc="$(bannerlord_changelog_parser fulldescription -f "$PWD/changelog.txt")"
          desc="${desc//'%'/'%25'}"
          desc="${desc//$'\n'/'%0A'}"
          desc="${desc//$'\r'/'%0D'}"
          echo "::set-output name=mod_description::$desc"
        shell: bash

  build-launcher-extension:
    name: Build Launcher Extension
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      uses: butr/actions-common-setup@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}

    - name: Create bannerlord folder
      run: mkdir bannerlord;

    - name: Build Launcher Extension
      run: dotnet build src/Bannerlord.BUTRLoader.AssemblyManager/Bannerlord.BUTRLoader.AssemblyManager.csproj -p:configuration=Release -p:GameFolder="$PWD/bannerlord";
      shell: pwsh

    - name: Cleanup
      run: >-
          cd $PWD/bannerlord;
          Get-ChildItem -Exclude bin | Remove-Item -Recurse -Force;
          cd bin;
          cd Win64_Shipping_Client;
          Get-ChildItem -Exclude Bannerlord.BUTRLoader.dll,Bannerlord.BUTRLoader.pdb,TaleWorlds.MountAndBlade.Launcher.exe.config | Remove-Item -Recurse -Force;
      shell: pwsh

    - name: Upload Bannerlord folder
      uses: actions/upload-artifact@v3
      with:
        name: bannerlord-launcher-extension
        path: ./bannerlord/

  build-blse:
    name: Build BLSE
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      uses: butr/actions-common-setup@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}

    - name: Create bannerlord folder
      run: mkdir bannerlord;

    - name: Build Bannerlord.BLSE
      run: dotnet build src/Bannerlord.BLSE/Bannerlord.BLSE.csproj -p:configuration=Release -p:GameFolder="$PWD/bannerlord";
      shell: pwsh

    - name: Build Bannerlord.BLSE.Launcher
      run: dotnet build src/Bannerlord.BLSE.Launcher/Bannerlord.BLSE.Launcher.csproj -p:configuration=Release -p:GameFolder="$PWD/bannerlord";
      shell: pwsh

    - name: Cleanup
      run: >-
          cd $PWD/bannerlord;
          Get-ChildItem -Exclude bin | Remove-Item -Recurse -Force;
          cd bin;
          cd Win64_Shipping_Client;
          Get-ChildItem -Exclude Bannerlord.BLSE.exe,Bannerlord.BLSE.Launcher.exe | Remove-Item -Recurse -Force;
      shell: pwsh

    - name: Upload Bannerlord folder
      uses: actions/upload-artifact@v3
      with:
        name: bannerlord-blse
        path: ./bannerlord/


###########################
#        NEXUSMODS        #
###########################
  publish-on-nexusmods-launcher-extension:
    needs: ["changelog", "build-launcher-extension"]
    if: startsWith(github.ref, 'refs/tags/v')
    name: Publish Launcher Extension on NexusMods
    uses: BUTR/workflows/.github/workflows/release-nexusmods.yml@master
    with:
      nexusmods_game_id: mountandblade2bannerlord
      nexusmods_mod_id: 2513
      mod_filename: BUTRLoader
      mod_version: ${{ needs.changelog.outputs.mod_version }}
      mod_description: ${{ needs.changelog.outputs.mod_description }}
      artifact_name: bannerlord-launcher-extension
    secrets:
      NEXUSMODS_APIKEY: ${{ secrets.NEXUSMODS_APIKEY }}
      NEXUSMODS_COOKIES: ${{ secrets.NEXUSMODS_COOKIES }}

###########################
#        NEXUSMODS        #
###########################
  publish-on-nexusmods-blse:
    needs: ["changelog", "build-blse"]
    if: false
    #if: startsWith(github.ref, 'refs/tags/v')
    name: Publish BLSE on NexusMods
    uses: BUTR/workflows/.github/workflows/release-nexusmods.yml@master
    with:
      nexusmods_game_id: mountandblade2bannerlord
      nexusmods_mod_id: 1
      mod_filename: BUTRLoader
      mod_version: ${{ needs.changelog.outputs.mod_version }}
      mod_description: ${{ needs.changelog.outputs.mod_description }}
      artifact_name: bannerlord-blse
    secrets:
      NEXUSMODS_APIKEY: ${{ secrets.NEXUSMODS_APIKEY }}
      NEXUSMODS_COOKIES: ${{ secrets.NEXUSMODS_COOKIES }}


###########################
#         GITHUB          #
###########################
  publish-on-github:
    needs: ["changelog", "build-launcher-extension", "build-blse"]
    if: startsWith(github.ref, 'refs/tags/v')
    name: Publish Launcher Extension and BLSE on GitHub
    runs-on: ubuntu-latest
    environment:
      name: GitHub Release
      url: ${{ steps.upload_release_asset.outputs.browser_download_url }}
    steps:
    
    - name: Setup
      uses: butr/actions-common-setup@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Download Launcher Extension artifact
      uses: actions/download-artifact@v3
      with:
        name: bannerlord-launcher-extension
        path: ./launcher-extension

    - name: Download BLSE artifact
      uses: actions/download-artifact@v3
      with:
        name: bannerlord-blse
        path: ./blse

    - name: 7z Launcher Extension
      run: 7z a -t7z Bannerlord.BUTRLoader.7z ./launcher-extension/* -mx9
      #shell: pwsh
      # pwsh casues it to include the root folder
      
    - name: 7z BLSE
      run: 7z a -t7z BLSE.7z ./blse/* -mx9
      #shell: pwsh
      # pwsh casues it to include the root folder

    - name: Install Bannerlord.ChangelogParser
      if: ${{ inputs.mod_version == '' || inputs.mod_description == '' }}
      run: dotnet tool install -g Bannerlord.ChangelogParser;
      shell: pwsh

    - name: Set Version
      id: set_version
      run: |
        if ${{ inputs.mod_version == '' }}
        then
          vers="$(bannerlord_changelog_parser latestversion -f "$PWD/changelog.txt")"
          echo "::set-output name=mod_version::$vers"
        else
          echo "::set-output name=mod_version::${{ inputs.mod_version }}"
        fi
    - name: Set Description
      id: set_description
      run: |
        if ${{ inputs.mod_description == '' }}
        then
          desc="$(bannerlord_changelog_parser fulldescription -f "$PWD/changelog.txt")"
          desc="${desc//'%'/'%25'}"
          desc="${desc//$'"'/'%22'}"
          desc="${desc//$'\n'/'%0A'}"
          desc="${desc//$'\r'/'%0D'}"
          echo "::set-output name=mod_description::$desc"
        else
          desc="${{ inputs.mod_description }}"
          desc="${desc//'%'/'%25'}"
          desc="${desc//$'"'/'%22'}"
          desc="${desc//$'\n'/'%0A'}"
          desc="${desc//$'\r'/'%0D'}"
          echo "::set-output name=mod_description::$desc"
        fi

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        tag_name: v${{ steps.set_version.outputs.mod_version }}
        release_name: Release ${{ steps.set_version.outputs.mod_version }}
        body: ${{ steps.set_description.outputs.mod_description }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Release Asset Launcher Extension
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Bannerlord.BUTRLoader.7z
        asset_name: Bannerlord.BUTRLoader.7z
        asset_content_type: application/x-7z-compressed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset BLSE
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./BLSE.7z
        asset_name: BLSE.7z
        asset_content_type: application/x-7z-compressed
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}